#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Excel —Ñ–∞–π–ª–æ–≤:
IntelligentPreProcessor ‚Üí DataAdapter ‚Üí GoogleSheetsManager
"""

import sys
import logging
from pathlib import Path
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥—É–ª–∏ –≤ path
sys.path.insert(0, str(Path(__file__).parent))

def test_complete_pipeline():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞"""
    
    print('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–õ–ù–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê –û–ë–†–ê–ë–û–¢–ö–ò')
    print('=' * 80)
    print('üìä –ü–∞–π–ø–ª–∞–π–Ω: IntelligentPreProcessor ‚Üí DataAdapter ‚Üí GoogleSheetsManager')
    print()
    
    try:
        # –≠—Ç–∞–ø 1: –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
        print('üîç –≠–¢–ê–ü 1: –ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –§–ê–ô–õ–ê')
        print('-' * 60)
        
        from modules.intelligent_preprocessor import IntelligentPreProcessor
        processor = IntelligentPreProcessor()
        
        file_path = 'DOC-20250428-WA0004..xlsx'
        if not Path(file_path).exists():
            print(f'‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}')
            return False
        
        print(f'üìÅ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: {file_path}')
        intelligent_result = processor.process_excel_intelligent(file_path)
        
        if 'error' in intelligent_result:
            print(f'‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞: {intelligent_result["error"]}')
            return False
        
        total_products = len(intelligent_result['total_products'])
        total_prices = len(intelligent_result['total_prices'])
        linked_pairs = len(intelligent_result.get('product_price_pairs', []))
        completeness = intelligent_result['recovery_stats']['data_completeness']
        
        print(f'‚úÖ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω:')
        print(f'   üì¶ –¢–æ–≤–∞—Ä–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {total_products}')
        print(f'   üí∞ –¶–µ–Ω –∏–∑–≤–ª–µ—á–µ–Ω–æ: {total_prices}')
        print(f'   üîó –°–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–∞—Ä: {linked_pairs}')
        print(f'   üìà –ü–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: {completeness:.1f}%')
        print()
        
        # –≠—Ç–∞–ø 2: –ê–¥–∞–ø—Ç–µ—Ä –¥–∞–Ω–Ω—ã—Ö
        print('üîÑ –≠–¢–ê–ü 2: –ü–†–ï–û–ë–†–ê–ó–û–í–ê–ù–ò–ï –î–ê–ù–ù–´–•')
        print('-' * 60)
        
        from modules.data_adapter import DataAdapter
        adapter = DataAdapter()
        
        supplier_name = f"SAI_FRESH_TEST_{datetime.now().strftime('%Y%m%d_%H%M')}"
        sheets_data = adapter.convert_intelligent_to_sheets_format(intelligent_result, supplier_name)
        
        if 'error' in sheets_data:
            print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {sheets_data["error"]}')
            return False
        
        adapted_products = len(sheets_data.get('products', []))
        success_rate = sheets_data.get('processing_stats', {}).get('success_rate', 0)
        
        print(f'‚úÖ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ:')
        print(f'   üîÑ –¢–æ–≤–∞—Ä–æ–≤ –¥–ª—è Google Sheets: {adapted_products}')
        print(f'   üìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏: {success_rate:.1f}%')
        print()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
        print('üì¶ –ü–†–ò–ú–ï–†–´ –ü–†–ï–û–ë–†–ê–ó–û–í–ê–ù–ù–´–• –¢–û–í–ê–†–û–í:')
        for i, product in enumerate(sheets_data.get('products', [])[:5]):
            print(f'  {i+1}. {product["standardized_name"]} - {product["price"]:.0f} {product["currency"]} ({product["unit"]}) [{product["category"]}]')
        print()
        
        # –≠—Ç–∞–ø 3: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Google Sheets
        print('üíæ –≠–¢–ê–ü 3: –°–û–•–†–ê–ù–ï–ù–ò–ï –í GOOGLE SHEETS')
        print('-' * 60)
        
        from modules.google_sheets_manager import GoogleSheetsManager
        sheets_manager = GoogleSheetsManager()
        
        if not sheets_manager.is_connected():
            print('‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets')
            return False
        
        print('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        print('üìä –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É...')
        sheets_result = sheets_manager.update_master_table(sheets_data)
        
        if 'error' in sheets_result:
            print(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Google Sheets: {sheets_result["error"]}')
            return False
        
        print(f'‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Google Sheets:')
        print(f'   üì¶ –ù–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {sheets_result.get("new_products", 0)}')
        print(f'   üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–Ω: {sheets_result.get("updated_prices", 0)}')
        print(f'   üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {sheets_result.get("processed_products", 0)}')
        
        # –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
        print('üìã –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞...')
        if sheets_manager.create_supplier_summary(supplier_name, sheets_data.get('products', [])):
            print(f'‚úÖ –õ–∏—Å—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Å–æ–∑–¥–∞–Ω: Supplier_{supplier_name}')
        else:
            print('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ª–∏—Å—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞')
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–∞–±–ª–∏—Ü—É
        sheets_url = sheets_manager.get_sheet_url()
        print(f'üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É: {sheets_url}')
        print()
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print('üéâ –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–ê–ô–ü–õ–ê–ô–ù–ê')
        print('=' * 60)
        print(f'üìÅ –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª: {file_path}')
        print(f'üîç –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∞–Ω–∞–ª–∏–∑–∞: {intelligent_result.get("processing_strategy", "unknown")}')
        print(f'üìä –ü–æ–ª–Ω–æ—Ç–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è: {completeness:.1f}%')
        print(f'üîÑ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏: {success_rate:.1f}%')
        print(f'üíæ –¢–æ–≤–∞—Ä–æ–≤ –≤ Google Sheets: {sheets_result.get("processed_products", 0)}')
        print(f'üè™ –ü–æ—Å—Ç–∞–≤—â–∏–∫: {supplier_name}')
        print()
        
        # –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
        if completeness >= 90 and success_rate >= 80 and sheets_result.get("processed_products", 0) > 0:
            print('üèÜ –†–ï–ó–£–õ–¨–¢–ê–¢: –û–¢–õ–ò–ß–ù–´–ô - –ø–æ–ª–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω–æ!')
        elif completeness >= 70 and success_rate >= 60:
            print('‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢: –•–û–†–û–®–ò–ô - –ø–∞–π–ø–ª–∞–π–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø–æ—Ç–µ—Ä—è–º–∏')
        else:
            print('‚ö†Ô∏è –†–ï–ó–£–õ–¨–¢–ê–¢: –¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò - –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ –ø–∞–π–ø–ª–∞–π–Ω–µ')
        
        print()
        print('üîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Google Sheets:')
        print(f'   {sheets_url}')
        
        return True
        
    except Exception as e:
        logger.error(f'‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –ø–∞–π–ø–ª–∞–π–Ω–µ: {e}', exc_info=True)
        print(f'‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}')
        return False

def test_data_quality():
    """–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö"""
    
    print('\nüîç –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –¢–ï–°–¢ –ö–ê–ß–ï–°–¢–í–ê –î–ê–ù–ù–´–•')
    print('=' * 50)
    
    try:
        from modules.intelligent_preprocessor import IntelligentPreProcessor
        from modules.data_adapter import DataAdapter
        
        processor = IntelligentPreProcessor()
        adapter = DataAdapter()
        
        file_path = 'DOC-20250428-WA0004..xlsx'
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞
        result = processor.process_excel_intelligent(file_path)
        converted = adapter.convert_intelligent_to_sheets_format(result, "QUALITY_TEST")
        
        products = converted.get('products', [])
        
        # –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞
        valid_prices = sum(1 for p in products if p.get('price', 0) > 0)
        valid_names = sum(1 for p in products if len(p.get('standardized_name', '')) > 2)
        categorized = sum(1 for p in products if p.get('category', 'general') != 'general')
        
        print(f'üìä –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö:')
        print(f'   üì¶ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}')
        print(f'   üí∞ –° –≤–∞–ª–∏–¥–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏: {valid_prices} ({valid_prices/max(len(products),1)*100:.1f}%)')
        print(f'   üìù –° –≤–∞–ª–∏–¥–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏: {valid_names} ({valid_names/max(len(products),1)*100:.1f}%)')
        print(f'   üè∑Ô∏è –° –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π: {categorized} ({categorized/max(len(products),1)*100:.1f}%)')
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        problematic = [p for p in products if p.get('price', 0) <= 0 or len(p.get('standardized_name', '')) <= 2]
        if problematic:
            print(f'\n‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã ({len(problematic)}):')
            for i, p in enumerate(problematic[:3]):
                print(f'  {i+1}. {p.get("standardized_name", "N/A")} - —Ü–µ–Ω–∞: {p.get("price", 0)}')
        
        return len(products) > 0 and valid_prices/max(len(products),1) > 0.5
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –∫–∞—á–µ—Å—Ç–≤–∞: {e}')
        return False

if __name__ == "__main__":
    print('üß™ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã...')
    print()
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –ø–∞–π–ø–ª–∞–π–Ω–∞
    pipeline_success = test_complete_pipeline()
    
    # –¢–µ—Å—Ç –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö
    quality_success = test_data_quality()
    
    print('\n' + '='*80)
    print('üìã –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø')
    print('='*80)
    
    if pipeline_success and quality_success:
        print('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!')
        print('‚úÖ –ü–æ–ª–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
        print('‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º')
        print('üíæ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Google Sheets')
    elif pipeline_success:
        print('‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•')
        print('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –ø–∞–π–ø–ª–∞–π–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç')
        print('‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞—á–µ—Å—Ç–≤–æ–º –¥–∞–Ω–Ω—ã—Ö')
    else:
        print('‚ùå –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´')
        print('‚ùå –ï—Å—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ –ø–∞–π–ø–ª–∞–π–Ω–µ')
    
    print('\nüîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Google Sheets —Ç–∞–±–ª–∏—Ü–µ!') 