#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
import pandas as pd

sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from modules.advanced_excel_parser import AdvancedExcelParser

def debug_excel_parsing():
    """–û—Ç–ª–∞–¥–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ Excel —Ñ–∞–π–ª–∞"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ê–†–°–ï–†–ê EXCEL")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    test_data = {
        'Unnamed: 0': ['Product A', 'Product B', 'Product C', '', 'nan', 123, 'Good Product'],
        '    Prices': [100.50, '200,30', '$300.00', '', 'nan', 'invalid', 450],
        'unit': ['pcs', 'kg', '', 'pcs', 'nan', '', 'box'],
        'category': ['electronics', 'food', '', '', '', '', 'tools']
    }
    
    df = pd.DataFrame(test_data)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    os.makedirs('data/temp', exist_ok=True)
    test_file = 'data/temp/debug_test.xlsx'
    df.to_excel(test_file, index=False)
    
    print(f"üìä –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_file}")
    print(f"üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(df)
    print()
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
    parser = AdvancedExcelParser()
    
    # –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    print("üîç –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–∞...")
    structure = parser.analyze_file_structure(test_file)
    print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞: {structure}")
    print()
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    df_read = pd.read_excel(test_file)
    print("üìÑ –ü—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(df_read)
    print()
    
    # –ü–æ–∏—Å–∫ —Å—Ç–æ–ª–±—Ü–æ–≤
    print("üîé –ü–æ–∏—Å–∫ —Å—Ç–æ–ª–±—Ü–æ–≤...")
    columns = parser.find_columns(df_read)
    print(f"–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã: {columns}")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏
    print("üì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:")
    for idx, row in df_read.iterrows():
        print(f"–°—Ç—Ä–æ–∫–∞ {idx}:")
        
        # –ù–∞–∑–≤–∞–Ω–∏–µ
        name = parser._extract_product_name(row, columns['product'])
        print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: '{row[columns['product']]}' ‚Üí '{name}'")
        
        # –¶–µ–Ω–∞
        price = parser._extract_price(row, columns['price'], df_read.columns)
        print(f"  –¶–µ–Ω–∞: '{row[columns['price']]}' ‚Üí {price}")
        
        # –ï–¥–∏–Ω–∏—Ü–∞
        unit = parser._extract_unit(row, columns['unit'])
        print(f"  –ï–¥–∏–Ω–∏—Ü–∞: '{row[columns['unit']]}' ‚Üí '{unit}'")
        
        # –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å
        valid = name and len(str(name)) > 1 and price > 0
        print(f"  ‚úÖ –í–∞–ª–∏–¥–Ω—ã–π —Ç–æ–≤–∞—Ä: {valid}")
        print()
    
    # –ü–æ–ª–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ
    print("üöÄ –ü–æ–ª–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤:")
    result = parser.extract_products_smart(test_file)
    
    if 'error' in result:
        print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
    else:
        products = result.get('products', [])
        stats = result.get('extraction_stats', {})
        
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è:")
        print(f"  –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {stats.get('total_rows', 0)}")
        print(f"  –ò–∑–≤–ª–µ—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {stats.get('extracted_products', 0)}")
        print(f"  –ü—Ä–æ–ø—É—â–µ–Ω–æ —Å—Ç—Ä–æ–∫: {stats.get('skipped_rows', 0)}")
        print(f"  –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {stats.get('success_rate', 0):.1%}")
        
        print(f"\nüì¶ –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:")
        for i, product in enumerate(products):
            print(f"  {i+1}. {product['original_name']} | {product['price']} {product['unit']}")

def test_price_parsing():
    """–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ —Ü–µ–Ω"""
    print("\nüí∞ –¢–ï–°–¢ –ü–ê–†–°–ò–ù–ì–ê –¶–ï–ù")
    print("=" * 50)
    
    parser = AdvancedExcelParser()
    
    test_prices = [
        "100.50",
        "1,000.50", 
        "1.000,50",
        "$100.00",
        "200 —Ä—É–±",
        "300‚ÇΩ",
        "1 234,56",
        "1.234.567,89",
        "",
        "nan",
        "invalid",
        "0",
        "-100",
        "999999999",
        100.50,  # —á–∏—Å–ª–æ
        "1.23.45"  # –Ω–µ—è—Å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    ]
    
    for price_str in test_prices:
        result = parser._parse_price_string(str(price_str))
        print(f"'{price_str}' ‚Üí {result}")

if __name__ == "__main__":
    debug_excel_parsing()
    test_price_parsing()