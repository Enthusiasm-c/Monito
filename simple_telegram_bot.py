#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π Telegram –±–æ—Ç —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π preprocessor –±–µ–∑ pandas –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import os
import sys
import logging
from datetime import datetime
from pathlib import Path
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

from telegram import Update, Document
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from telegram.constants import ParseMode

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# –û—á–µ–Ω—å –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(sys.stdout),
        logging.FileHandler('simple_bot_detailed.log', mode='w', encoding='utf-8')
    ]
)
logger = logging.getLogger(__name__)

class SimpleTelegramBot:
    """–ü—Ä–æ—Å—Ç–æ–π Telegram –±–æ—Ç —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    
    def __init__(self):
        self.token = os.getenv('TELEGRAM_BOT_TOKEN')
        self.temp_dir = "data/temp"
        os.makedirs(self.temp_dir, exist_ok=True)
        
        if not self.token:
            raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SimpleTelegramBot")
        logger.info(f"üìÅ –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞: {self.temp_dir}")
    
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /start"""
        logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.username} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
        
        welcome_message = """
üöÄ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Simple Price List Analyzer!*

–Ø –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º.

*üéØ –ß—Ç–æ —è —É–º–µ—é:*
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
‚Ä¢ –ê–Ω–∞–ª–∏–∑ Excel —Ñ–∞–π–ª–æ–≤ —Å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–º –ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏

*üîß –ö–æ–º–∞–Ω–¥—ã:*
/start - —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/help - –ø–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞  
/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã
/test - —Ç–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

*üìÅ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ Excel —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞!*

–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤ —Ñ–∞–π–ª `simple_bot_detailed.log` üìù
        """
        
        logger.info("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ welcome —Å–æ–æ–±—â–µ–Ω–∏—è")
        await update.message.reply_text(welcome_message, parse_mode=ParseMode.MARKDOWN)
        logger.info("‚úÖ Welcome —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /help"""
        logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.username} –∑–∞–ø—Ä–æ—Å–∏–ª help")
        
        help_text = """
üìñ *–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ Simple Bot*

*üîç –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ Excel:*
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ multi-column, sparse, irregular —Ñ–æ—Ä–º–∞—Ç–æ–≤
‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –°–≤—è–∑—ã–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ü–µ–Ω–∞–º–∏

*üìä –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:*
‚Ä¢ –ö–∞–∂–¥–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –ª–æ–≥
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏

*üéØ –ü—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏:*
1. –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞
2. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∞–Ω–∞–ª–∏–∑–∞
3. –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
4. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
5. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞

*üí° –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:*
‚Ä¢ –§–∞–π–ª: `simple_bot_detailed.log`
‚Ä¢ –£—Ä–æ–≤–µ–Ω—å: DEBUG (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è)
‚Ä¢ –í–∫–ª—é—á–∞–µ—Ç: HTTP –∑–∞–ø—Ä–æ—Å—ã, –∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–æ–≤, –æ—à–∏–±–∫–∏
        """
        
        logger.info("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ help —Å–æ–æ–±—â–µ–Ω–∏—è")
        await update.message.reply_text(help_text, parse_mode=ParseMode.MARKDOWN)
        logger.info("‚úÖ Help —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    
    async def stats_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /stats"""
        logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.username} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        
        # –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–∞
        log_file = Path('simple_bot_detailed.log')
        stats_text = f"""
üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Simple Bot*

*üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:*
‚Ä¢ –§–∞–π–ª –ª–æ–≥–∞: {log_file.name}
‚Ä¢ –†–∞–∑–º–µ—Ä –ª–æ–≥–∞: {log_file.stat().st_size / 1024:.1f} KB
‚Ä¢ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}

*üîß –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:*
‚Ä¢ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä: ‚úÖ –ì–æ—Ç–æ–≤
‚Ä¢ Excel –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä: ‚úÖ –ì–æ—Ç–æ–≤  
‚Ä¢ Telegram API: ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: ‚úÖ –í–∫–ª—é—á–µ–Ω–æ

*üí° –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å:*
–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ Excel —Ñ–∞–π–ª–æ–≤ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è!
        """
        
        logger.info("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
        await update.message.reply_text(stats_text, parse_mode=ParseMode.MARKDOWN)
        logger.info("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
    
    async def test_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /test"""
        logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.username} –∑–∞–ø—É—Å—Ç–∏–ª —Ç–µ—Å—Ç")
        
        test_message = await update.message.reply_text("üîç –¢–µ—Å—Ç–∏—Ä—É—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º...")
        logger.info("üìù –ù–∞—á–∞—Ç —Ç–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤")
        
        try:
            # –¢–µ—Å—Ç –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
            logger.debug("üß™ –ò–º–ø–æ—Ä—Ç –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞...")
            from modules.intelligent_preprocessor import IntelligentPreProcessor
            IntelligentPreProcessor()
            logger.info("‚úÖ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
            
            # –¢–µ—Å—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–∞–ø–∫–∏
            logger.debug("üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–∞–ø–∫–∏...")
            temp_path = Path(self.temp_dir)
            if temp_path.exists():
                logger.info(f"‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞: {temp_path}")
            else:
                logger.warning(f"‚ö†Ô∏è –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {temp_path}")
            
            result_text = """
üîç *–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è*

*üìä –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:*
‚Ä¢ IntelligentPreProcessor: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç
‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞: ‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞
‚Ä¢ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: ‚úÖ –ê–∫—Ç–∏–≤–Ω–æ
‚Ä¢ Telegram API: ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω

*üéØ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã:* üü¢ –ü–æ–ª–Ω–∞—è

*üí° –î–µ—Ç–∞–ª–∏:*
‚Ä¢ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤ `simple_bot_detailed.log`
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: multi_column, sparse, irregular, adaptive
‚Ä¢ –ì–æ—Ç–æ–≤ –∫ –∞–Ω–∞–ª–∏–∑—É —Ñ–∞–π–ª–æ–≤ –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏

*üìä –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:* DEBUG (–º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π)
            """
            
            logger.info("‚úÖ –¢–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")
            
            await context.bot.edit_message_text(
                chat_id=update.effective_chat.id,
                message_id=test_message.message_id,
                text=result_text,
                parse_mode=ParseMode.MARKDOWN
            )
            
            logger.info("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}", exc_info=True)
            
            await context.bot.edit_message_text(
                chat_id=update.effective_chat.id,
                message_id=test_message.message_id,
                text=f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}"
            )
    
    async def handle_document(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
        user_id = update.effective_user.id
        username = update.effective_user.username or update.effective_user.first_name
        document: Document = update.message.document
        
        logger.info("="*80)
        logger.info("üî• –ù–ê–ß–ê–õ–ê–°–¨ –ü–û–î–†–û–ë–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –§–ê–ô–õ–ê")
        logger.info("="*80)
        logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username} (ID: {user_id})")
        logger.info(f"üìé –§–∞–π–ª: {document.file_name}")
        logger.info(f"üìä –†–∞–∑–º–µ—Ä: {document.file_size / 1024 / 1024:.2f} –ú–ë")
        logger.info(f"üéØ MIME —Ç–∏–ø: {document.mime_type}")
        logger.info(f"üÜî File ID: {document.file_id}")
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞
        logger.debug("üîç –ù–∞—á–∏–Ω–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ñ–∞–π–ª–∞...")
        validation_result = self._validate_file(document)
        if not validation_result['valid']:
            logger.error(f"‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞: {validation_result['error']}")
            await update.message.reply_text(f"‚ùå {validation_result['error']}")
            return
        
        logger.info("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é")
        
        processing_message = await update.message.reply_text("üöÄ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º...")
        logger.info("üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        
        try:
            start_time = datetime.now()
            logger.info(f"‚è∞ –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {start_time}")
            
            # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            logger.debug("‚¨áÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞...")
            file = await context.bot.get_file(document.file_id)
            file_path = os.path.join(self.temp_dir, document.file_name)
            logger.debug(f"üìÅ –¶–µ–ª–µ–≤–æ–π –ø—É—Ç—å: {file_path}")
            
            await file.download_to_drive(file_path)
            download_time = datetime.now()
            download_duration = (download_time - start_time).total_seconds()
            
            logger.info(f"‚úÖ –§–∞–π–ª —Å–∫–∞—á–∞–Ω –∑–∞ {download_duration:.1f}—Å: {document.file_name}")
            logger.debug(f"üìÅ –°–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {file_path}")
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
            await context.bot.edit_message_text(
                chat_id=update.effective_chat.id,
                message_id=processing_message.message_id,
                text="üîç –ü—Ä–∏–º–µ–Ω—è—é –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º..."
            )
            logger.info("üì§ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞")
            
            # –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞
            file_extension = document.file_name.lower().split('.')[-1]
            logger.info(f"üìã –¢–∏–ø —Ñ–∞–π–ª–∞: {file_extension.upper()}")
            
            if file_extension in ['xlsx', 'xls']:
                logger.info("üîç –ù–ê–ß–ò–ù–ê–ï–ú –ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó EXCEL")
                
                parsing_start = datetime.now()
                logger.debug("üìä –ò–º–ø–æ—Ä—Ç IntelligentPreProcessor...")
                
                from modules.intelligent_preprocessor import IntelligentPreProcessor
                processor = IntelligentPreProcessor()
                
                logger.info("‚úÖ IntelligentPreProcessor –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                logger.debug("üöÄ –ó–∞–ø—É—Å–∫ process_excel_intelligent...")
                
                # –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
                result = processor.process_excel_intelligent(file_path)
                
                parsing_time = datetime.now()
                parsing_duration = (parsing_time - parsing_start).total_seconds()
                
                logger.info(f"‚úÖ –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù –∑–∞ {parsing_duration:.1f}—Å")
                
                if 'error' in result:
                    logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –∞–Ω–∞–ª–∏–∑–∞: {result['error']}")
                    await context.bot.edit_message_text(
                        chat_id=update.effective_chat.id,
                        message_id=processing_message.message_id,
                        text=f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {result['error']}"
                    )
                    return
                
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Google Sheets
                logger.info("üîÑ –ü–†–ï–û–ë–†–ê–ó–û–í–ê–ù–ò–ï –î–ê–ù–ù–´–• –î–õ–Ø GOOGLE SHEETS...")
                await context.bot.edit_message_text(
                    chat_id=update.effective_chat.id,
                    message_id=processing_message.message_id,
                    text="üîÑ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Google Sheets..."
                )
                
                from modules.data_adapter import DataAdapter
                adapter = DataAdapter()
                
                supplier_name = f"SAI_FRESH_{datetime.now().strftime('%Y%m%d')}"
                sheets_data = adapter.convert_intelligent_to_sheets_format(result, supplier_name)
                
                if 'error' in sheets_data:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {sheets_data['error']}")
                    await context.bot.edit_message_text(
                        chat_id=update.effective_chat.id,
                        message_id=processing_message.message_id,
                        text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {sheets_data['error']}"
                    )
                    return
                
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Google Sheets
                logger.info("üíæ –°–û–•–†–ê–ù–ï–ù–ò–ï –í GOOGLE SHEETS...")
                await context.bot.edit_message_text(
                    chat_id=update.effective_chat.id,
                    message_id=processing_message.message_id,
                    text="üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Google Sheets..."
                )
                
                from modules.google_sheets_manager import GoogleSheetsManager
                sheets_manager = GoogleSheetsManager()
                
                if not sheets_manager.is_connected():
                    logger.error("‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets")
                    await context.bot.edit_message_text(
                        chat_id=update.effective_chat.id,
                        message_id=processing_message.message_id,
                        text="‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets"
                    )
                    return
                
                sheets_result = sheets_manager.update_master_table(sheets_data)
                
                if 'error' in sheets_result:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Google Sheets: {sheets_result['error']}")
                    await context.bot.edit_message_text(
                        chat_id=update.effective_chat.id,
                        message_id=processing_message.message_id,
                        text=f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {sheets_result['error']}"
                    )
                    return
                
                # –°–æ–∑–¥–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                sheets_manager.create_supplier_summary(supplier_name, sheets_data.get('products', []))
                
                # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                total_products = len(result['total_products'])
                total_prices = len(result['total_prices'])
                linked_pairs = len(result.get('product_price_pairs', []))
                sheets_products = len(sheets_data.get('products', []))
                completeness = result['recovery_stats']['data_completeness']
                strategy = result['processing_strategy']
                
                logger.info("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê:")
                logger.info(f"   üì¶ –¢–æ–≤–∞—Ä–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {total_products}")
                logger.info(f"   üí∞ –¶–µ–Ω –∏–∑–≤–ª–µ—á–µ–Ω–æ: {total_prices}")
                logger.info(f"   üîó –°–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–∞—Ä: {linked_pairs}")
                logger.info(f"   ‚úÖ –¢–æ–≤–∞—Ä–æ–≤ –¥–ª—è Sheets: {sheets_products}")
                logger.info(f"   üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ Google Sheets: {sheets_result}")
                logger.info(f"   üéØ –°—Ç—Ä–∞—Ç–µ–≥–∏—è: {strategy}")
                logger.info(f"   üìà –ü–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: {completeness:.1f}%")
                
                # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
                total_time = (datetime.now() - start_time).total_seconds()
                sheets_url = sheets_manager.get_sheet_url()
                
                report = f"""
‚úÖ *–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Google Sheets!*

‚è± *–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:* {total_time:.1f} —Å–µ–∫
üìä *–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞:* {document.file_size / 1024:.1f} KB

üîç *–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:*
‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏—è: {strategy}
‚Ä¢ –õ–∏—Å—Ç–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {len(result['sheets_processed'])}
‚Ä¢ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ: {download_duration:.1f}—Å
‚Ä¢ –ê–Ω–∞–ª–∏–∑: {parsing_duration:.1f}—Å

üì¶ *–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑–≤–ª–µ—á–µ–Ω–∏—è:*
‚Ä¢ –¢–æ–≤–∞—Ä–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {total_products}
‚Ä¢ –¶–µ–Ω –∏–∑–≤–ª–µ—á–µ–Ω–æ: {total_prices}
‚Ä¢ –°–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–∞—Ä: {linked_pairs}
‚Ä¢ –ü–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: {completeness:.1f}%

üîÑ *–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è Google Sheets:*
‚Ä¢ –¢–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {sheets_products}
‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏: {sheets_data.get('processing_stats', {}).get('success_rate', 0):.1f}%

üíæ *Google Sheets —Ä–µ–∑—É–ª—å—Ç–∞—Ç:*
‚Ä¢ –ù–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {sheets_result.get('new_products', 0)}
‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–Ω: {sheets_result.get('updated_prices', 0)}
‚Ä¢ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {sheets_result.get('processed_products', 0)}

üîó [–û—Ç–∫—Ä—ã—Ç—å Google Sheets —Ç–∞–±–ª–∏—Ü—É]({sheets_url})

üìù *–î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏:* `simple_bot_detailed.log`

üéØ *–£–ª—É—á—à–µ–Ω–∏—è –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏:*
‚Ä¢ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∞–Ω–∞–ª–∏–∑–∞
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ sparse –∏ irregular —Ñ–æ—Ä–º–∞—Ç–æ–≤  
‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –°–≤—è–∑—ã–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ü–µ–Ω–∞–º–∏
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è Google Sheets
‚Ä¢ –†–µ–∞–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É!
                """
                
                await context.bot.edit_message_text(
                    chat_id=update.effective_chat.id,
                    message_id=processing_message.message_id,
                    text=report,
                    parse_mode=ParseMode.MARKDOWN
                )
                
                logger.info("‚úÖ –û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
                logger.info(f"üìù –û–±—â–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {total_time:.1f}—Å")
                
            else:
                logger.warning(f"‚ö†Ô∏è –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞: {file_extension}")
                await context.bot.edit_message_text(
                    chat_id=update.effective_chat.id,
                    message_id=processing_message.message_id,
                    text="‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ Excel —Ñ–∞–π–ª—ã (.xlsx, .xls)"
                )
            
        except Exception as e:
            logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}", exc_info=True)
            
            error_text = f"""‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞:
`{str(e)}`

*üìù –î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ –æ—à–∏–±–∫–∏ –∑–∞–ø–∏—Å–∞–Ω—ã –≤:*
`simple_bot_detailed.log`

*üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:*
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å .xlsx –∏–ª–∏ .xls)
‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω
‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ñ–∞–π–ª –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞"""
            
            await context.bot.edit_message_text(
                chat_id=update.effective_chat.id,
                message_id=processing_message.message_id,
                text=error_text,
                parse_mode=ParseMode.MARKDOWN
            )
        
        finally:
            # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
            try:
                if os.path.exists(file_path):
                    os.remove(file_path)
                    logger.debug(f"üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω: {file_path}")
            except Exception as cleanup_error:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {cleanup_error}")
            
            logger.info("="*80)
            logger.info("üèÅ –ó–ê–í–ï–†–®–ï–ù–ò–ï –û–ë–†–ê–ë–û–¢–ö–ò –§–ê–ô–õ–ê")
            logger.info("="*80)
    
    def _validate_file(self, document: Document) -> dict:
        """–í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
        
        logger.debug(f"üîç –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞: {document.file_name}")
        logger.debug(f"üìä –†–∞–∑–º–µ—Ä: {document.file_size} –±–∞–π—Ç")
        logger.debug(f"üéØ MIME: {document.mime_type}")
        
        supported_extensions = ('.xlsx', '.xls')
        if not document.file_name.lower().endswith(supported_extensions):
            logger.warning(f"‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: {document.file_name}")
            return {'valid': False, 'error': '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ Excel —Ñ–∞–π–ª—ã (.xlsx, .xls)'}
        
        max_size = 20 * 1024 * 1024  # 20 MB
        if document.file_size > max_size:
            logger.warning(f"‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π: {document.file_size} –±–∞–π—Ç (–ª–∏–º–∏—Ç: {max_size})")
            return {'valid': False, 'error': '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º—É–º 20 –ú–ë'}
        
        logger.debug("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
        return {'valid': True}
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        user_message = update.message.text
        username = update.effective_user.username or update.effective_user.first_name
        
        logger.info(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {username}: {user_message}")
        
        await update.message.reply_text(
            "üìù –°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ –≤ –ª–æ–≥! –û—Ç–ø—Ä–∞–≤—å—Ç–µ Excel —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start - –Ω–∞—á–∞–ª–æ\n"
            "/help - —Å–ø—Ä–∞–≤–∫–∞\n"
            "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
            "/test - —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã"
        )
        
        logger.info("üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    
    async def compare_prices_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤–æ–¥–Ω–æ–≥–æ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ —Å —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º —Ü–µ–Ω"""
        chat_id = update.effective_chat.id
        user_id = update.effective_user.id
        logger.info(f"üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ü–µ–Ω")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        processing_message = await context.bot.send_message(
            chat_id=chat_id,
            text="üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–¥–Ω–æ–≥–æ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ —Å–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º —Ü–µ–Ω...\n‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç"
        )
        
        try:
            logger.info("üìä –ò–º–ø–æ—Ä—Ç GoogleSheetsManager...")
            from modules.google_sheets_manager import GoogleSheetsManager
            
            sheets = GoogleSheetsManager()
            if not sheets.is_connected():
                await context.bot.edit_message_text(
                    chat_id=chat_id,
                    message_id=processing_message.message_id,
                    text="‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets"
                )
                return
            
            logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            
            # –°–æ–∑–¥–∞–µ–º —Å–≤–æ–¥–Ω—ã–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç
            logger.info("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–¥–Ω–æ–≥–æ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞...")
            comparison_result = sheets.create_unified_price_comparison()
            
            if 'error' in comparison_result:
                await context.bot.edit_message_text(
                    chat_id=chat_id,
                    message_id=processing_message.message_id,
                    text=f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤–æ–¥–Ω–æ–≥–æ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞:\n{comparison_result['error']}"
                )
                return
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats = comparison_result.get('stats', {})
            sheet_url = comparison_result.get('sheet_url', '')
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
            report_text = f"""‚úÖ **–°–í–û–î–ù–´–ô –ü–†–ê–ô–°-–õ–ò–°–¢ –°–û–ó–î–ê–ù –£–°–ü–ï–®–ù–û!**

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ üì¶ –¢–æ–≤–∞—Ä–æ–≤ —Å —Ü–µ–Ω–∞–º–∏: {stats.get('products_with_prices', 0)}
‚Ä¢ üè™ –ü–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤: {stats.get('suppliers_count', 0)}
‚Ä¢ üìà –°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–±—Ä–æ—Å —Ü–µ–Ω: {stats.get('average_price_difference', 0):.1f}%

üéØ **–ß—Ç–æ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞:**
‚Ä¢ –í—Å–µ —Ç–æ–≤–∞—Ä—ã –æ—Ç –≤—Å–µ—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
‚Ä¢ –õ—É—á—à–∏–µ —Ü–µ–Ω—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ü–µ–Ω –º–µ–∂–¥—É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º–∏
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç —ç–∫–æ–Ω–æ–º–∏–∏ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ª—É—á—à–µ–π —Ü–µ–Ω—ã
‚Ä¢ –°—Ä–µ–¥–Ω–∏–µ —Ü–µ–Ω—ã –ø–æ —Ç–æ–≤–∞—Ä–∞–º

üìã **–õ–∏—Å—Ç:** `Price Comparison`
üîó **–°—Å—ã–ª–∫–∞:** {sheet_url}

üí° **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /price_summary –¥–ª—è –∫—Ä–∞—Ç–∫–æ–π —Å–≤–æ–¥–∫–∏**"""

            await context.bot.edit_message_text(
                chat_id=chat_id,
                message_id=processing_message.message_id,
                text=report_text,
                parse_mode=ParseMode.MARKDOWN
            )
            
            logger.info("‚úÖ –°–≤–æ–¥–Ω—ã–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
            
        except Exception as e:
            logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤–æ–¥–Ω–æ–≥–æ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞: {e}")
            await context.bot.edit_message_text(
                chat_id=chat_id,
                message_id=processing_message.message_id,
                text=f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}"
            )

    async def price_summary_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–∞—Ç–∫–æ–π —Å–≤–æ–¥–∫–∏ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Ü–µ–Ω"""
        user_id = update.effective_user.id
        logger.info(f"üìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–≤–æ–¥–∫—É —Ü–µ–Ω")
        
        try:
            from modules.google_sheets_manager import GoogleSheetsManager
            
            sheets = GoogleSheetsManager()
            if not sheets.is_connected():
                await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets")
                return
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É
            summary = sheets.get_price_comparison_summary()
            
            if 'error' in summary:
                await update.message.reply_text(f"‚ùå {summary['error']}")
                return
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç
            categories_text = ""
            for cat, info in summary.get('categories_breakdown', {}).items():
                categories_text += f"  ‚Ä¢ {cat}: {info['count']} —Ç–æ–≤–∞—Ä–æ–≤\n"
            
            suppliers_text = ", ".join(summary.get('suppliers', []))
            
            summary_text = f"""ÔøΩÔøΩ **–ö–†–ê–¢–ö–ê–Ø –°–í–û–î–ö–ê –ü–û –¶–ï–ù–ê–ú**

üìä **–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ üì¶ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {summary.get('total_products', 0)}
‚Ä¢ üè™ –ü–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤: {summary.get('suppliers_count', 0)}
‚Ä¢ üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {summary.get('categories', 0)}

üìÇ **–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:**
{categories_text}

üè™ **–ü–æ—Å—Ç–∞–≤—â–∏–∫–∏:**
{suppliers_text}

üîó **–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É:** {summary.get('sheet_url', '')}

üí° **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /compare_prices –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–≤–æ–¥–Ω–æ–≥–æ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞**"""

            await update.message.reply_text(summary_text, parse_mode=ParseMode.MARKDOWN)
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–æ–¥–∫–∏: {e}")
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ Simple Telegram –±–æ—Ç–∞ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º...")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        application = Application.builder().token(self.token).build()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
        application.add_handler(CommandHandler("start", self.start))
        application.add_handler(CommandHandler("help", self.help_command))
        application.add_handler(CommandHandler("stats", self.stats_command))
        application.add_handler(CommandHandler("test", self.test_command))
        application.add_handler(CommandHandler("compare_prices", self.compare_prices_command))
        application.add_handler(CommandHandler("price_summary", self.price_summary_command))
        application.add_handler(MessageHandler(filters.Document.ALL, self.handle_document))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
        
        logger.info("‚úÖ –•–µ–Ω–¥–ª–µ—Ä—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ polling
        logger.info("üîÑ –ó–∞–ø—É—Å–∫ polling —Ä–µ–∂–∏–º–∞...")
        application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    try:
        bot = SimpleTelegramBot()
        bot.run()
    except KeyboardInterrupt:
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}", exc_info=True) 