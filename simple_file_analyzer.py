#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ñ–∞–π–ª–æ–≤ –±–µ–∑ pandas
"""

import sys
from pathlib import Path
import json

def analyze_excel_simple():
    """–ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ Excel —Ñ–∞–π–ª–æ–≤"""
    
    print('üîç –ê–ù–ê–õ–ò–ó EXCEL –§–ê–ô–õ–û–í (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π)')
    print('=' * 50)
    
    files = [
        'LIST HARGA UD RAHAYU.xlsx',
        'DOC-20250428-WA0004..xlsx'
    ]
    
    for file in files:
        file_path = Path(file)
        if file_path.exists():
            print(f'\nüìä –§–∞–π–ª: {file}')
            print(f'–†–∞–∑–º–µ—Ä: {file_path.stat().st_size / 1024:.1f} KB')
            
            try:
                # –ü—Ä–æ–±—É–µ–º openpyxl
                from openpyxl import load_workbook
                
                wb = load_workbook(file, read_only=True)
                print(f'–õ–∏—Å—Ç—ã: {wb.sheetnames}')
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
                ws = wb.active
                print(f'–ê–∫—Ç–∏–≤–Ω—ã–π –ª–∏—Å—Ç: {ws.title}')
                print(f'–†–∞–∑–º–µ—Ä—ã: {ws.max_row} —Å—Ç—Ä–æ–∫ x {ws.max_column} —Å—Ç–æ–ª–±—Ü–æ–≤')
                
                # –ß–∏—Ç–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
                headers = []
                for col in range(1, min(ws.max_column + 1, 10)):  # –ú–∞–∫—Å–∏–º—É–º 10 —Å—Ç–æ–ª–±—Ü–æ–≤
                    cell_value = ws.cell(row=1, column=col).value
                    headers.append(cell_value)
                
                print(f'–ó–∞–≥–æ–ª–æ–≤–∫–∏: {headers}')
                
                # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö
                print('\nüìã –ü–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö:')
                for row_num in range(2, min(6, ws.max_row + 1)):  # —Å—Ç—Ä–æ–∫–∏ 2-5
                    row_data = []
                    for col in range(1, min(len(headers) + 1, 10)):
                        cell_value = ws.cell(row=row_num, column=col).value
                        row_data.append(str(cell_value)[:20] if cell_value else "")
                    print(f'  –°—Ç—Ä–æ–∫–∞ {row_num}: {row_data}')
                
                # –ò—â–µ–º —Å—Ç–æ–ª–±—Ü—ã —Å —Ü–µ–Ω–∞–º–∏
                print(f'\nüí∞ –ü–æ–∏—Å–∫ —Å—Ç–æ–ª–±—Ü–æ–≤ —Å —Ü–µ–Ω–∞–º–∏:')
                for i, header in enumerate(headers):
                    if header and isinstance(header, str):
                        header_lower = header.lower()
                        if any(word in header_lower for word in ['harga', 'price', '—Ü–µ–Ω–∞', '—Å—Ç–æ–∏–º–æ—Å—Ç—å', 'rp']):
                            print(f'  ‚úÖ –ù–∞–π–¥–µ–Ω –≤ —Å—Ç–æ–ª–±—Ü–µ {i+1}: {header}')
                
                wb.close()
                
            except ImportError:
                print('‚ùå openpyxl –Ω–µ –Ω–∞–π–¥–µ–Ω')
            except Exception as e:
                print(f'‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è Excel: {e}')
        else:
            print(f'‚ùå –§–∞–π–ª {file} –Ω–µ –Ω–∞–π–¥–µ–Ω')

def analyze_pdf_simple():
    """–ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ PDF —Ñ–∞–π–ª–∞"""
    
    print(f'\nüîç –ê–ù–ê–õ–ò–ó PDF –§–ê–ô–õ–ê')
    print('=' * 50)
    
    file = '1. PT. Global Anugrah Pasifik (groceries item).pdf'
    file_path = Path(file)
    
    if file_path.exists():
        print(f'üìÑ –§–∞–π–ª: {file}')
        print(f'–†–∞–∑–º–µ—Ä: {file_path.stat().st_size / (1024*1024):.1f} MB')
        print('‚ÑπÔ∏è  PDF –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ (pdfplumber, PyPDF2)')
        print('‚ÑπÔ∏è  –ù–æ –º—ã –º–æ–∂–µ–º –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ')
    else:
        print(f'‚ùå PDF —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω')

def check_program_modules():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –º–æ–¥—É–ª–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    
    print(f'\nüîç –ü–†–û–í–ï–†–ö–ê –ú–û–î–£–õ–ï–ô –ü–†–û–ì–†–ê–ú–ú–´')
    print('=' * 50)
    
    modules_to_check = [
        'modules/universal_excel_parser.py',
        'modules/pre_processor.py', 
        'modules/batch_llm_processor_v2.py',
        'modules/google_sheets_manager_v2.py',
        'modules/row_validator_v2.py',
        'modules/metrics_collector_v2.py',
        'modules/celery_worker_v2.py',
        'modules/task_deduplicator.py',
        'modules/quota_manager.py',
        'modules/adaptive_scaler.py'
    ]
    
    for module in modules_to_check:
        module_path = Path(module)
        if module_path.exists():
            print(f'  ‚úÖ {module} ({module_path.stat().st_size / 1024:.1f} KB)')
        else:
            print(f'  ‚ùå {module} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')

if __name__ == "__main__":
    analyze_excel_simple()
    analyze_pdf_simple()
    check_program_modules() 