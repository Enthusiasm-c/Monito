#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Excel —Ñ–∞–π–ª–∞ - –≥–¥–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è —Ç–æ–≤–∞—Ä—ã
"""

import pandas as pd
import sys
import os

sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def analyze_excel_structure():
    """–ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Excel —Ñ–∞–π–ª–∞"""
    
    file_path = "/Users/denisdomashenko/price_list_analyzer/DOC-20250428-WA0004..xlsx"
    
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        return
    
    print("üîç –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ EXCEL –§–ê–ô–õ–ê")
    print("=" * 60)
    
    try:
        # –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
        df = pd.read_excel(file_path, sheet_name='Sheet1')
        
        print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {len(df)}")
        print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤: {len(df.columns)}")
        print(f"üìã –ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤: {list(df.columns)}")
        
        print(f"\nüìÑ –ü–ï–†–í–´–ï 10 –°–¢–†–û–ö:")
        print("-" * 40)
        for i in range(min(10, len(df))):
            row_data = []
            for col in df.columns:
                value = str(df.iloc[i][col]) if pd.notna(df.iloc[i][col]) else ""
                if len(value) > 30:
                    value = value[:27] + "..."
                row_data.append(value)
            print(f"–°—Ç—Ä–æ–∫–∞ {i}: {' | '.join(row_data)}")
        
        print(f"\nüìÑ –°–¢–†–û–ö–ò 15-25 (–≥–¥–µ AI –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è):")
        print("-" * 40)
        for i in range(15, min(25, len(df))):
            row_data = []
            for col in df.columns:
                value = str(df.iloc[i][col]) if pd.notna(df.iloc[i][col]) else ""
                if len(value) > 30:
                    value = value[:27] + "..."
                row_data.append(value)
            print(f"–°—Ç—Ä–æ–∫–∞ {i}: {' | '.join(row_data)}")
        
        print(f"\nüìÑ –°–†–ï–î–ù–ò–ï –°–¢–†–û–ö–ò (50-60):")
        print("-" * 40)
        for i in range(50, min(60, len(df))):
            row_data = []
            for col in df.columns:
                value = str(df.iloc[i][col]) if pd.notna(df.iloc[i][col]) else ""
                if len(value) > 30:
                    value = value[:27] + "..."
                row_data.append(value)
            print(f"–°—Ç—Ä–æ–∫–∞ {i}: {' | '.join(row_data)}")
        
        print(f"\nüìÑ –ü–û–°–õ–ï–î–ù–ò–ï 10 –°–¢–†–û–ö:")
        print("-" * 40)
        start_idx = max(0, len(df) - 10)
        for i in range(start_idx, len(df)):
            row_data = []
            for col in df.columns:
                value = str(df.iloc[i][col]) if pd.notna(df.iloc[i][col]) else ""
                if len(value) > 30:
                    value = value[:27] + "..."
                row_data.append(value)
            print(f"–°—Ç—Ä–æ–∫–∞ {i}: {' | '.join(row_data)}")
        
        # –ê–Ω–∞–ª–∏–∑ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –≤—Å–µ–º—É —Ñ–∞–π–ª—É
        print(f"\nüîç –ê–ù–ê–õ–ò–ó –¢–û–í–ê–†–û–í –ü–û –î–ò–ê–ü–ê–ó–û–ù–ê–ú:")
        print("-" * 40)
        
        from modules.universal_excel_parser import UniversalExcelParser
        parser = UniversalExcelParser()
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã
        ranges = [
            (0, 20, "–ü–µ—Ä–≤—ã–µ 20 —Å—Ç—Ä–æ–∫ (AI –≤–∏–¥–∏—Ç)"),
            (20, 50, "–°—Ç—Ä–æ–∫–∏ 20-50"),
            (50, 100, "–°—Ç—Ä–æ–∫–∏ 50-100"),
            (100, len(df), "–°—Ç—Ä–æ–∫–∏ 100+")
        ]
        
        for start, end, desc in ranges:
            if start >= len(df):
                continue
            
            end = min(end, len(df))
            df_slice = df.iloc[start:end].copy()
            
            if df_slice.empty:
                continue
            
            product_count = 0
            price_count = 0
            
            for _, row in df_slice.iterrows():
                for value in row:
                    if pd.notna(value):
                        value_str = str(value).strip()
                        
                        if parser._looks_like_product(value_str):
                            product_count += 1
                        elif parser._looks_like_price(value_str):
                            price_count += 1
            
            print(f"{desc}: —Ç–æ–≤–∞—Ä–æ–≤={product_count}, —Ü–µ–Ω={price_count}")
        
        print(f"\nüí° –í–´–í–û–î:")
        print("   –ï—Å–ª–∏ AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 20 —Å—Ç—Ä–æ–∫,")
        print("   –æ–Ω –º–æ–∂–µ—Ç –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –º–∞—Å—Å—É —Ç–æ–≤–∞—Ä–æ–≤!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    analyze_excel_structure()