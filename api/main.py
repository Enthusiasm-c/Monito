"""
=============================================================================
MONITO REST API MAIN APPLICATION
=============================================================================
–í–µ—Ä—Å–∏—è: 3.0
–¶–µ–ª—å: FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è unified —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–µ–Ω–∞–º–∏
=============================================================================
"""

import os
from contextlib import asynccontextmanager
from typing import Dict, Any

from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
from fastapi.middleware.gzip import GZipMiddleware
from fastapi.responses import JSONResponse
from fastapi.openapi.docs import get_swagger_ui_html
from fastapi.openapi.utils import get_openapi

from modules.adapters.legacy_integration_adapter import LegacyIntegrationAdapter
from modules.compatibility.compatibility_manager import CompatibilityManager
from utils.logger import get_logger

from .routers import (
    catalog_router,
    products_router,
    suppliers_router,
    prices_router,
    analytics_router,
    migration_router,
    health_router,
    telegram,
    unified_catalog,
    websocket,
    reports
)
from .middleware import (
    RequestLoggingMiddleware,
    AuthenticationMiddleware,
    RateLimitingMiddleware
)
from .config import get_api_config

logger = get_logger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è unified —Å–∏—Å—Ç–µ–º—ã
integration_adapter: LegacyIntegrationAdapter = None
compatibility_manager: CompatibilityManager = None

@asynccontextmanager
async def lifespan(app: FastAPI):
    """Lifecycle manager –¥–ª—è FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    # Startup
    logger.info("üöÄ Starting Monito API...")
    
    global integration_adapter, compatibility_manager
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º unified —Å–∏—Å—Ç–µ–º—É
        config = get_api_config()
        database_url = config.database_url
        
        integration_adapter = LegacyIntegrationAdapter(database_url)
        compatibility_manager = CompatibilityManager(integration_adapter)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ app state –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ —Ä–æ—É—Ç–µ—Ä–æ–≤
        app.state.integration_adapter = integration_adapter
        app.state.compatibility_manager = compatibility_manager
        
        logger.info("‚úÖ Unified system initialized successfully")
        
    except Exception as e:
        logger.error(f"‚ùå Failed to initialize unified system: {e}")
        raise
    
    yield
    
    # Shutdown
    logger.info("üõë Shutting down Monito API...")
    
    # Cleanup if needed
    # integration_adapter cleanup would go here
    
    logger.info("‚úÖ Shutdown complete")

def create_app() -> FastAPI:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    
    Returns:
        –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    """
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = get_api_config()
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = FastAPI(
        title="Monito Unified Price Management API",
        description="""
        üèùÔ∏è **Monito** - Unified —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–µ–Ω–∞–º–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –æ—Å—Ç—Ä–æ–≤–∞ –ë–∞–ª–∏
        
        ## –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
        
        * üîç **Unified Catalog** - –ï–¥–∏–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º —Ü–µ–Ω
        * üí∞ **Price Analysis** - –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–∞–∫—É–ø–∫–∞–º
        * üè™ **Supplier Management** - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º–∏ –∏ –∏—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
        * üìä **Analytics** - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞ –∏ —Ç—Ä–µ–Ω–¥–æ–≤ —Ü–µ–Ω
        * üîÑ **Migration Tools** - –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –º–∏–≥—Ä–∞—Ü–∏–∏ –∏–∑ legacy —Å–∏—Å—Ç–µ–º—ã
        
        ## –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        
        - **FastAPI** –¥–ª—è –≤—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ API
        - **SQLAlchemy** –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å unified –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        - **AI-powered** —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–æ–≤
        - **Real-time** –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        """,
        version="3.0.0",
        lifespan=lifespan,
        docs_url="/docs" if config.enable_docs else None,
        redoc_url="/redoc" if config.enable_docs else None,
        openapi_url="/openapi.json" if config.enable_docs else None
    )
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º CORS
    app.add_middleware(
        CORSMiddleware,
        allow_origins=config.cors_origins,
        allow_credentials=True,
        allow_methods=["*"],
        allow_headers=["*"],
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º Gzip —Å–∂–∞—Ç–∏–µ
    app.add_middleware(GZipMiddleware, minimum_size=1000)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ middleware
    app.add_middleware(RequestLoggingMiddleware)
    
    if config.enable_auth:
        app.add_middleware(AuthenticationMiddleware, api_key=config.api_key)
    
    if config.enable_rate_limiting:
        app.add_middleware(RateLimitingMiddleware, 
                          requests_per_minute=config.rate_limit_per_minute)
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
    app.include_router(health_router, prefix="/health", tags=["Health"])
    app.include_router(catalog_router, prefix="/api/v1/catalog", tags=["Unified Catalog"])
    app.include_router(products_router, prefix="/api/v1/products", tags=["Products"])
    app.include_router(suppliers_router, prefix="/api/v1/suppliers", tags=["Suppliers"])
    app.include_router(prices_router, prefix="/api/v1/prices", tags=["Prices"])
    app.include_router(analytics_router, prefix="/api/v1/analytics", tags=["Analytics"])
    app.include_router(migration_router, prefix="/api/v1/migration", tags=["Migration"])
    app.include_router(telegram.router, prefix="/api/v1/telegram", tags=["Telegram"])
    app.include_router(websocket.router, tags=["WebSocket"])
    app.include_router(reports.router, prefix="/api/v1", tags=["Reports"])
    
    # Unified —Ä–æ—É—Ç–µ—Ä—ã (—É–∂–µ —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞–º–∏)
    app.include_router(unified_catalog.router)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
    @app.exception_handler(Exception)
    async def global_exception_handler(request: Request, exc: Exception):
        logger.error(f"Unhandled exception: {exc}", exc_info=True)
        return JSONResponse(
            status_code=500,
            content={
                "error": "Internal Server Error",
                "message": "An unexpected error occurred",
                "request_id": getattr(request.state, 'request_id', 'unknown')
            }
        )
    
    # –ö–∞—Å—Ç–æ–º–Ω–∞—è OpenAPI —Å—Ö–µ–º–∞
    def custom_openapi():
        if app.openapi_schema:
            return app.openapi_schema
        
        openapi_schema = get_openapi(
            title="Monito Unified API",
            version="3.0.0",
            description=app.description,
            routes=app.routes,
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ç–µ–≥–∏ –∏ —Å—Ö–µ–º—ã
        openapi_schema["info"]["x-logo"] = {
            "url": "https://via.placeholder.com/200x50/4A90E2/FFFFFF?text=MONITO"
        }
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
        openapi_schema["tags"] = [
            {
                "name": "Health",
                "description": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è API –∏ —Å–∏—Å—Ç–µ–º—ã"
            },
            {
                "name": "Unified Catalog",
                "description": "üè™ –ï–¥–∏–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ —Å –ª—É—á—à–∏–º–∏ —Ü–µ–Ω–∞–º–∏"
            },
            {
                "name": "Products",
                "description": "üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –∏—Ö —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ"
            },
            {
                "name": "Suppliers",
                "description": "üè¨ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º–∏ –∏ –∏—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é"
            },
            {
                "name": "Prices",
                "description": "üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω–∞–º–∏ –∏ –∏—Ö –∞–Ω–∞–ª–∏–∑"
            },
            {
                "name": "Analytics", 
                "description": "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
            },
            {
                "name": "Migration",
                "description": "üîÑ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –º–∏–≥—Ä–∞—Ü–∏–∏ –∏–∑ legacy —Å–∏—Å—Ç–µ–º—ã"
            },
            {
                "name": "Telegram",
                "description": "ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º –≤ Telegram"
            },
            {
                "name": "WebSocket",
                "description": "üîÑ WebSocket –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"
            },
            {
                "name": "Reports",
                "description": "üìä –û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö"
            }
        ]
        
        app.openapi_schema = openapi_schema
        return app.openapi_schema
    
    app.openapi = custom_openapi
    
    # –ö–∞—Å—Ç–æ–º–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
    @app.get("/docs", include_in_schema=False)
    async def custom_swagger_ui_html():
        return get_swagger_ui_html(
            openapi_url=app.openapi_url,
            title=f"{app.title} - Interactive API Documentation",
            swagger_favicon_url="https://via.placeholder.com/32x32/4A90E2/FFFFFF?text=M",
            swagger_ui_parameters={
                "defaultModelsExpandDepth": -1,
                "docExpansion": "list",
                "filter": True,
                "showRequestHeaders": True
            }
        )
    
    # Root endpoint
    @app.get("/", include_in_schema=False)
    async def root():
        return {
            "message": "üèùÔ∏è Monito Unified Price Management API",
            "version": "3.0.0",
            "status": "operational",
            "docs": "/docs",
            "health": "/health"
        }
    
    logger.info(f"FastAPI application created with config: {config.dict()}")
    
    return app

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = create_app() 