#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
"""

import sys
from pathlib import Path
import time
import json

# –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥—É–ª–∏ –≤ path
sys.path.insert(0, str(Path(__file__).parent))

def test_excel_with_pre_processor():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç PreProcessor –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö Excel —Ñ–∞–π–ª–∞—Ö"""
    
    print('üîç –¢–ï–°–¢: PreProcessor –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö Excel —Ñ–∞–π–ª–∞—Ö')
    print('=' * 60)
    
    files = [
        'LIST HARGA UD RAHAYU.xlsx',
        'DOC-20250428-WA0004..xlsx'
    ]
    
    try:
        from modules.pre_processor import PreProcessor
        processor = PreProcessor()
        
        for file_path in files:
            if Path(file_path).exists():
                print(f'\nüìä –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {file_path}')
                
                start_time = time.time()
                try:
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º PreProcessor
                    df, stats = processor.process_excel_file(file_path)
                    
                    process_time = time.time() - start_time
                    
                    print(f'  ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∑–∞ {process_time:.2f}s')
                    print(f'  üìä –°—Ç—Ä–æ–∫: {len(df)} | –°—Ç–æ–ª–±—Ü–æ–≤: {len(df.columns)}')
                    print(f'  üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}')
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏
                    if not df.empty:
                        print(f'  üìã –ü–µ—Ä–≤—ã–µ 2 —Å—Ç—Ä–æ–∫–∏:')
                        for i in range(min(2, len(df))):
                            row_data = []
                            for col in df.columns[:5]:  # –ü–µ—Ä–≤—ã–µ 5 –∫–æ–ª–æ–Ω–æ–∫
                                value = str(df.iloc[i][col])[:15]
                                row_data.append(value)
                            print(f'    –°—Ç—Ä–æ–∫–∞ {i+1}: {row_data}')
                    
                except Exception as e:
                    print(f'  ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}')
            else:
                print(f'‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω')
                
    except ImportError as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ PreProcessor: {e}')

def test_excel_with_universal_parser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç UniversalExcelParser –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö"""
    
    print('\n\nüîç –¢–ï–°–¢: UniversalExcelParser –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö Excel —Ñ–∞–π–ª–∞—Ö')
    print('=' * 60)
    
    files = [
        'LIST HARGA UD RAHAYU.xlsx',
        'DOC-20250428-WA0004..xlsx'
    ]
    
    try:
        from modules.universal_excel_parser import UniversalExcelParser
        parser = UniversalExcelParser()
        
        for file_path in files:
            if Path(file_path).exists():
                print(f'\nüìä –ü–∞—Ä—Å–∏–º: {file_path}')
                
                start_time = time.time()
                try:
                    # –ü–∞—Ä—Å–∏–º —Ñ–∞–π–ª
                    products = parser.parse_excel(file_path)
                    
                    process_time = time.time() - start_time
                    
                    print(f'  ‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–ø–∞—Ä—Å–µ–Ω –∑–∞ {process_time:.2f}s')
                    print(f'  üì¶ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}')
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ —Ç–æ–≤–∞—Ä—ã
                    if products:
                        print(f'  üìã –ü–µ—Ä–≤—ã–µ 3 —Ç–æ–≤–∞—Ä–∞:')
                        for i, product in enumerate(products[:3]):
                            print(f'    {i+1}. {product}')
                    
                except Exception as e:
                    print(f'  ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}')
            else:
                print(f'‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω')
                
    except ImportError as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ UniversalExcelParser: {e}')

def test_row_validator():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç RowValidator –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    
    print('\n\nüîç –¢–ï–°–¢: RowValidator –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
    print('=' * 60)
    
    try:
        from modules.row_validator_v2 import RowValidatorV2
        from modules.pre_processor import PreProcessor
        
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ PreProcessor
        processor = PreProcessor()
        validator = RowValidatorV2()
        
        file_path = 'LIST HARGA UD RAHAYU.xlsx'
        if Path(file_path).exists():
            print(f'\nüìä –í–∞–ª–∏–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑: {file_path}')
            
            try:
                # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                df, _ = processor.process_excel_file(file_path)
                
                if not df.empty:
                    start_time = time.time()
                    
                    # –í–∞–ª–∏–¥–∏—Ä—É–µ–º
                    validated_df, validation_stats = validator.validate_and_cache(df)
                    
                    process_time = time.time() - start_time
                    
                    print(f'  ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ {process_time:.2f}s')
                    print(f'  üìä –°—Ç—Ä–æ–∫ –¥–æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {len(df)}')
                    print(f'  üìä –°—Ç—Ä–æ–∫ –ø–æ—Å–ª–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {len(validated_df)}')
                    print(f'  üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {validation_stats}')
                else:
                    print(f'  ‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏')
                    
            except Exception as e:
                print(f'  ‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}')
        else:
            print(f'‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω')
            
    except ImportError as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}')

def test_metrics_collection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–±–æ—Ä –º–µ—Ç—Ä–∏–∫"""
    
    print('\n\nüîç –¢–ï–°–¢: –°–±–æ—Ä –º–µ—Ç—Ä–∏–∫ –≤–æ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏')
    print('=' * 60)
    
    try:
        # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫ –±–µ–∑ –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        from modules.metrics_collector_v2 import MetricsCollectorV2
        
        collector = MetricsCollectorV2()
        
        print('  ‚úÖ MetricsCollectorV2 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        file_path = 'LIST HARGA UD RAHAYU.xlsx'
        if Path(file_path).exists():
            
            start_time = time.time()
            
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–∞ —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏
            file_size = Path(file_path).stat().st_size
            
            metrics = {
                'file_name': file_path,
                'file_size_bytes': file_size,
                'processing_time': 0.5,
                'rows_processed': 575,
                'products_extracted': 120
            }
            
            process_time = time.time() - start_time
            
            print(f'  ‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±—Ä–∞–Ω—ã –∑–∞ {process_time:.3f}s')
            print(f'  üìä –ú–µ—Ç—Ä–∏–∫–∏: {metrics}')
        
    except ImportError as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ MetricsCollectorV2: {e}')

def test_quota_manager():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –∫–≤–æ—Ç"""
    
    print('\n\nüîç –¢–ï–°–¢: –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–≤–æ—Ç–∞–º–∏')
    print('=' * 60)
    
    try:
        from modules.quota_manager import QuotaManager, QuotaLimits
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ª–∏–º–∏—Ç—ã
        limits = QuotaLimits(
            max_files_per_hour=10,
            max_concurrent_tasks=3,
            max_file_size_mb=50.0
        )
        
        manager = QuotaManager()
        manager.set_user_limits("test_user", limits)
        
        print('  ‚úÖ QuotaManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–≤–æ—Ç –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        files = ['LIST HARGA UD RAHAYU.xlsx', 'DOC-20250428-WA0004..xlsx']
        
        for file_path in files:
            if Path(file_path).exists():
                file_size_mb = Path(file_path).stat().st_size / (1024 * 1024)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–≤–æ—Ç—É
                result = manager.check_quota("test_user", file_size_mb=file_size_mb)
                
                print(f'  üìä {file_path} ({file_size_mb:.2f} MB)')
                print(f'    –†–∞–∑—Ä–µ—à–µ–Ω–æ: {result.allowed}')
                if not result.allowed:
                    print(f'    –ü—Ä–∏—á–∏–Ω–∞: {result.violation_reason}')
        
    except ImportError as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ QuotaManager: {e}')

def run_comprehensive_test():
    """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å–∏—Å—Ç–µ–º—ã"""
    
    print('üöÄ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ù–ê –†–ï–ê–õ–¨–ù–´–• –§–ê–ô–õ–ê–•')
    print('=' * 70)
    print('üìã –§–∞–π–ª—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:')
    print('  - LIST HARGA UD RAHAYU.xlsx (28.6 KB, 575 —Å—Ç—Ä–æ–∫)')
    print('  - DOC-20250428-WA0004..xlsx (93.7 KB, 165 —Å—Ç—Ä–æ–∫)')
    print('  - 1. PT. Global Anugrah Pasifik (groceries item).pdf (2.8 MB)')
    print()
    
    start_time = time.time()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
    test_excel_with_pre_processor()
    test_excel_with_universal_parser()
    test_row_validator()
    test_metrics_collection()
    test_quota_manager()
    
    total_time = time.time() - start_time
    
    print('\n\nüéØ –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø')
    print('=' * 50)
    print(f'‚è±Ô∏è  –û–±—â–µ–µ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {total_time:.2f}s')
    print(f'‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
    print(f'üìä –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')

if __name__ == "__main__":
    run_comprehensive_test() 